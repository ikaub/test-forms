{"version":3,"sources":["components/form-input/form-input.component.js","components/custom-button/custom-button.component.js","utils/utils.js","components/form/form.component.js","redux/actions/actions.js","components/table-row/table-row.component.js","components/table-head/table-head.component.js","components/table/table.component.js","redux/reducers/form-reducer.js","redux/store.js","App.js","index.js"],"names":["FormInput","placeholder","name","value","onChange","validated","className","id","type","htmlFor","CustomButton","children","onClick","fields","initialState","firstName","lastName","phoneNumber","gender","age","validatedFields","genders","Form","dispatch","useDispatch","useState","inputState","setInputState","setValidated","event","target","prevalidate","field","pattern","match","postvalidate","valid","invalidFields","Object","keys","forEach","key","length","values","includes","toLowerCase","map","index","payload","alert","TableRow","data","TableHead","sort","scope","e","Table","useSelector","state","tableRows","displayedData","setDisplayedData","useEffect","sorting","obj1","obj2","compareValues","item","INITIAL_STATE","formReducer","action","row","assign","findIndex","obj","newRows","slice","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e94f8b77.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({placeholder, name, value, onChange, validated}) => {\r\n    return (\r\n        <div className='form-input'>\r\n            <input\r\n                id={name}\r\n                onChange={onChange}\r\n                name={name}\r\n                value={value}\r\n                type='text'\r\n                className={`${validated ? 'valid' : 'invalid'}`}\r\n            />\r\n            <label htmlFor={name} className={`form-input-label ${value ? 'active' : ''}`}>{placeholder}</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormInput;","import React from \"react\";\r\nimport './custom-button.styles.scss';\r\n\r\nconst CustomButton = ({children, onClick}) => {\r\n    return (\r\n        <div onClick={onClick} className='button'>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomButton;\r\n","export const fields = ['First Name', 'Last Name', 'Phone Number', 'Gender', 'Age'];\r\n\r\nexport const initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    gender: '',\r\n    age: ''\r\n};\r\n\r\nexport const validatedFields = {\r\n    firstName: true,\r\n    lastName: true,\r\n    phoneNumber: true,\r\n    gender: true,\r\n    age: true\r\n};\r\n\r\nexport const genders = ['m', 'f', 'male', 'female'];\r\n\r\nexport const compareValues = (field, sorting) => {\r\n    return (obj1, obj2) => {\r\n        if (obj1[field] > obj2[field])\r\n            return sorting === 'asc' ? 1 : -1;\r\n        else if (obj1[field] === obj2[field])\r\n            return 0;\r\n        return sorting === 'asc' ? -1 : 1;\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport './form.styles.scss';\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addNewRow} from \"../../redux/actions/actions\";\r\nimport {fields, initialState, validatedFields, genders} from \"../../utils/utils\";\r\n\r\n\r\nconst Form = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [inputState, setInputState] = useState(initialState);\r\n    const [validated, setValidated] = useState(validatedFields);\r\n\r\n    const onChange = (event) => {\r\n        setInputState({...inputState, [event.target.name]: event.target.value});\r\n        prevalidate(event.target.name, event.target.value);\r\n    }\r\n\r\n    const onClick = () => {\r\n        if (postvalidate()) {\r\n            dispatch(addNewRow(inputState));\r\n            setInputState(initialState);\r\n        } else {\r\n            alert('Some fields are incorrect. Try again, please.');\r\n        }\r\n    }\r\n\r\n    const prevalidate = (field, value) => {\r\n        let pattern;\r\n        switch (field) {\r\n            case 'phoneNumber':\r\n                pattern = /^380[0-9]{9}$|^\\+380[0-9]{9}$|^0[0-9]{9}$/;\r\n                break;\r\n            case 'age':\r\n                pattern = /^[1-9][0-9]?$/;\r\n                break;\r\n            case 'gender':\r\n                pattern = /^[mMaAlLeEfF]{1,6}$/;\r\n                break;\r\n            default:\r\n                pattern = /^[a-zA-Z]{2,20}$/;\r\n                break;\r\n        }\r\n        setValidated({...validated, [field]: !!value.match(pattern)});\r\n    }\r\n\r\n    const postvalidate = () => {\r\n        let valid = true;\r\n        const invalidFields = {};\r\n        Object.keys(inputState).forEach(key => {\r\n            if (!inputState[key].length) {\r\n                valid = false;\r\n                invalidFields[key] = false;\r\n            }\r\n        });\r\n        Object.values(validated).forEach(value => {\r\n            if (!value)\r\n                valid = false;\r\n        });\r\n        if (valid) {\r\n            valid = genders.includes(inputState.gender.toLowerCase());\r\n            invalidFields['gender'] = valid;\r\n        }\r\n        if (Object.keys(invalidFields).length)\r\n            setValidated({...validated, ...invalidFields});\r\n        return valid;\r\n    }\r\n\r\n    return (\r\n        <div className='col-6 form'>\r\n            <span>\r\n                Add New Data to the Table\r\n            </span>\r\n            <form>\r\n                {\r\n                    Object.keys(inputState).map((key, index) => (\r\n                        <FormInput\r\n                            onChange={onChange}\r\n                            placeholder={fields[index]}\r\n                            value={inputState[key]}\r\n                            name={key}\r\n                            validated={validated[key]}\r\n                            key={index}\r\n                        />\r\n                    ))\r\n                }\r\n            </form>\r\n            <CustomButton onClick={onClick}>Submit</CustomButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","export const ADD_NEW_ROW = 'ADD_NEW_ROW';\r\nexport const DELETE_ROW = 'DELETE_ROW';\r\n\r\nexport const addNewRow = (data) => ({\r\n    type: ADD_NEW_ROW,\r\n    payload: data\r\n});\r\n\r\nexport const deleteRow = (id) => ({\r\n    type: DELETE_ROW,\r\n    payload: id\r\n});","import React from \"react\";\r\nimport './table-row.styles.scss';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteRow} from \"../../redux/actions/actions\";\r\n\r\nconst TableRow = ({data}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteRow(data.id));\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            {Object.values(data).map(field => <td key={field}>{field}</td>)}\r\n            <td onClick={handleDelete} className='delete-mark'>&#10006;</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;","import React from \"react\";\r\nimport {fields, initialState} from \"../../utils/utils\";\r\nimport './table-head.styles.scss';\r\n\r\nconst TableHead = ({sort}) => {\r\n\r\n    return (\r\n        <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            {fields.map(field =>\r\n                <th scope='col' key={field}>\r\n                    {field}\r\n                </th>\r\n            )}\r\n        </tr>\r\n        <tr>\r\n            <th> </th>\r\n            {Object.keys(initialState).map((key) => (\r\n                <th key={key}>\r\n                    <span onClick={e => sort('asc', e)} id={key} className='sort'>Asc</span>|\r\n                    <span onClick={e => sort('desc', e)} id={key} className='sort'>Desc</span>\r\n                </th>\r\n            ))}\r\n        </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TableHead;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {compareValues, fields, initialState} from \"../../utils/utils\";\r\nimport TableRow from \"../table-row/table-row.component\";\r\nimport './table.styles.scss';\r\nimport TableHead from \"../table-head/table-head.component\";\r\n\r\nconst Table = () => {\r\n    const data = useSelector(state => state.tableRows);\r\n\r\n    const [displayedData, setDisplayedData] = useState(data);\r\n\r\n    const sortArray = (sorting, event) => {\r\n        setDisplayedData([...displayedData].sort(compareValues(event.target.id, sorting)));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDisplayedData(data);\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className='col-6 table'>\r\n            {!displayedData.length ? <div className='no-data-label'>There is no data yet.</div> :\r\n                <table>\r\n                    <TableHead sort={sortArray}/>\r\n                    <tbody>\r\n                    {displayedData.map((item, index) => (\r\n                        <TableRow key={index} data={item}/>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","import {ADD_NEW_ROW, DELETE_ROW} from \"../actions/actions\";\r\n\r\nconst INITIAL_STATE = {\r\n    tableRows: []\r\n};\r\n\r\nconst formReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_ROW:\r\n            const row = {id: state.tableRows.length + 1};\r\n            Object.assign(row, action.payload);\r\n            return {\r\n                ...state,\r\n                tableRows: [...state.tableRows, row]\r\n            };\r\n        case DELETE_ROW:\r\n            const index = state.tableRows.findIndex(obj => obj.id === action.payload);\r\n            const newRows = state.tableRows.slice(index + 1).map(obj => {\r\n                obj.id -= 1;\r\n                return obj;\r\n            });\r\n            return {\r\n                ...state,\r\n                tableRows: [...state.tableRows.slice(0, index), ...newRows]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default formReducer;","import {createStore} from \"redux\";\r\nimport {persistReducer, persistStore} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport formReducer from \"./reducers/form-reducer\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, formReducer);\r\n\r\nconst store = createStore(\r\n    persistedReducer,\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport {store, persistor};","import React from 'react';\nimport Form from \"./components/form/form.component\";\nimport Table from \"./components/table/table.component\";\nimport {Provider} from 'react-redux';\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport './basic.styles.scss';\nimport {store, persistor} from \"./redux/store\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <div className='container-fluid'>\n                    <div className='row'>\n                        <Form/>\n                        <Table/>\n                    </div>\n                </div>\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}